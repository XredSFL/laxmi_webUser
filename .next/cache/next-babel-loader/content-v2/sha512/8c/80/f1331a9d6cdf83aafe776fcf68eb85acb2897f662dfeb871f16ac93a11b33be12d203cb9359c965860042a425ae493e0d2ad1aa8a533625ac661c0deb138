{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\luarKampus\\\\Magang\\\\Bestada\\\\laxmi.front.web.user\\\\components\\\\partials\\\\register\\\\formRegister.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport useTranslation from 'next-translate/useTranslation';\nimport React, { useEffect, useState } from 'react'; // redux\n\nimport { registerAction } from '../../../stores'; // elements\n\nimport { Input } from '../../../components/elements/form';\nimport swal from 'sweetalert'; // helpers\n\nimport ValidatePassword from '../../../helpers/validationPassword';\n\nconst FormRegister = () => {\n  const router = useRouter();\n  const {\n    0: form,\n    1: setForm\n  } = useState({});\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    t\n  } = useTranslation(\"login\");\n  useEffect(() => {\n    setError({\n      email: \"\",\n      name: \"\",\n      password: \"\",\n      passwordConfirm: \"\"\n    });\n  }, []);\n\n  const handleChange = e => {\n    const {\n      value,\n      id\n    } = e.target;\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [id]: value\n    }));\n  };\n\n  const validateForm = () => {\n    let valid = true;\n\n    var newErrors = _objectSpread({}, error); // email\n\n\n    if (!form.email) {\n      newErrors.email = `Email ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else if (!form.email.includes(\"@\")) {\n      newErrors.email = `Email ${t(\"common:is not valid\")}`;\n      valid = false;\n    } else {\n      newErrors.email = null;\n    } // name\n\n\n    if (!form.name) {\n      newErrors.name = `Name ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else {\n      newErrors.name = null;\n    } // password\n\n\n    if (!form.password) {\n      newErrors.password = `Password ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else if (!ValidatePassword(form.password)) {\n      newErrors.password = `Password ${t(\"common:is not valid\")}`;\n      valid = false;\n    } else {\n      newErrors.password = null;\n    } // confirm password\n\n\n    if (!form.passwordConfirm) {\n      newErrors.passwordConfirm = `Confirm Password ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else if (!ValidatePassword(form.passwordConfirm)) {\n      newErrors.passwordConfirm = `Confirm Password ${t(\"common:is not valid\")}`;\n      valid = false;\n    } else if (form.password !== form.passwordConfirm) {\n      newErrors.passwordConfirm = `Confirm Password ${t(\"common:doesn't match with\")} Password`;\n      valid = false;\n    } else {\n      newErrors.passwordConfirm = null;\n    }\n\n    setError(newErrors);\n    return valid;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      setIsLoading(true);\n      registerAction(form).then(response => {\n        if (response.status) {\n          swal(`${t(\"Registration Succeeded\")}`, `${t(\"Your account has been registered and please click the ok button to enter the home page\")}`, \"success\").then(() => {\n            router.push('/login');\n          });\n          setIsLoading(false);\n        } else {\n          setError({\n            email: response.message\n          });\n          setIsLoading(false);\n        }\n      }).catch(e => {\n        setError({\n          email: `${t(\"common: Something Wrong\")}`\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      type: \"text\",\n      error: error.email,\n      label: t(\"Email\"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"name\",\n      type: \"text\",\n      error: error.name,\n      label: t(\"Name\"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"password\",\n      type: \"password\",\n      error: error.password,\n      label: t(\"Password\"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"passwordConfirm\",\n      type: \"password\",\n      error: error.passwordConfirm,\n      label: t(\"Confirm Password\"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading,\n      type: \"submit\",\n      className: \"btn btn-primary py-3 w-100\",\n      children: isLoading ? 'Loading' : t(\"Register\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\nexport default FormRegister;","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/register/formRegister.jsx"],"names":["useRouter","useTranslation","React","useEffect","useState","registerAction","Input","swal","ValidatePassword","FormRegister","router","form","setForm","error","setError","isLoading","setIsLoading","t","email","name","password","passwordConfirm","handleChange","e","value","id","target","validateForm","valid","newErrors","includes","handleSubmit","preventDefault","then","response","status","push","message","catch"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router'\r\nimport useTranslation from 'next-translate/useTranslation';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// redux\r\nimport { registerAction } from '../../../stores';\r\n\r\n// elements\r\nimport { Input } from '../../../components/elements/form';\r\nimport swal from 'sweetalert';\r\n\r\n// helpers\r\nimport ValidatePassword from '../../../helpers/validationPassword'\r\n\r\nconst FormRegister = () => {\r\n    const router = useRouter()\r\n\r\n    const [form, setForm] = useState({})\r\n    const [error, setError] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const { t } = useTranslation(\"login\")\r\n\r\n    useEffect(() => {\r\n        setError({\r\n            email: \"\",\r\n            name: \"\",\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n        })\r\n    }, [])\r\n\r\n    const handleChange = e => {\r\n        const { value, id } = e.target\r\n        setForm({\r\n            ...form,\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let valid = true;\r\n        var newErrors = { ...error }\r\n        // email\r\n        if (!form.email) {\r\n            newErrors.email = `Email ${t(\"common:cannot be empty\")}`;\r\n            valid = false;\r\n        } else if (!form.email.includes(\"@\")) {\r\n            newErrors.email = `Email ${t(\"common:is not valid\")}`;\r\n            valid = false;\r\n        } else {\r\n            newErrors.email = null\r\n        }\r\n        // name\r\n        if (!form.name) {\r\n            newErrors.name = `Name ${t(\"common:cannot be empty\")}`;\r\n            valid = false;\r\n        } else {\r\n            newErrors.name = null\r\n        }\r\n        // password\r\n        if (!form.password) {\r\n            newErrors.password = `Password ${t(\"common:cannot be empty\")}`;\r\n            valid = false;\r\n        } else if (!ValidatePassword(form.password)) {\r\n            newErrors.password = `Password ${t(\"common:is not valid\")}`;\r\n            valid = false;\r\n        } else {\r\n            newErrors.password = null\r\n        }\r\n        // confirm password\r\n        if (!form.passwordConfirm) {\r\n            newErrors.passwordConfirm = `Confirm Password ${t(\"common:cannot be empty\")}`;\r\n            valid = false;\r\n        } else if (!ValidatePassword(form.passwordConfirm)) {\r\n            newErrors.passwordConfirm = `Confirm Password ${t(\"common:is not valid\")}`;\r\n            valid = false;\r\n        } else if (form.password !== form.passwordConfirm) {\r\n            newErrors.passwordConfirm = `Confirm Password ${t(\"common:doesn't match with\")} Password`;\r\n            valid = false;\r\n        } else {\r\n            newErrors.passwordConfirm = null\r\n        }\r\n        setError(newErrors);\r\n        return valid;\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validateForm()) {\r\n            setIsLoading(true)\r\n            registerAction(form).then(response => {\r\n                if (response.status) {\r\n                    swal(\r\n                        `${t(\"Registration Succeeded\")}`,\r\n                        `${t(\"Your account has been registered and please click the ok button to enter the home page\")}`, \"success\").then(() => {\r\n                            router.push('/login')\r\n                        })\r\n                    setIsLoading(false)\r\n                } else {\r\n                    setError({\r\n                        email: response.message\r\n                    })\r\n                    setIsLoading(false)\r\n                }\r\n            }).catch((e) => {\r\n                setError({\r\n                    email: `${t(\"common: Something Wrong\")}`\r\n                })\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* {\r\n                error.alert ? \r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {error.alert}\r\n                </div> : null     \r\n            }            */}\r\n            <Input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                error={error.email}\r\n                label={t(\"Email\")}\r\n                onChange={handleChange}\r\n            />\r\n            <Input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                error={error.name}\r\n                label={t(\"Name\")}\r\n                onChange={handleChange}\r\n            />\r\n            <Input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                error={error.password}\r\n                label={t(\"Password\")}\r\n                onChange={handleChange}\r\n            />\r\n            <Input\r\n                id=\"passwordConfirm\"\r\n                type=\"password\"\r\n                error={error.passwordConfirm}\r\n                label={t(\"Confirm Password\")}\r\n                onChange={handleChange}\r\n            />\r\n            <button\r\n                disabled={isLoading}\r\n                type=\"submit\"\r\n                className=\"btn btn-primary py-3 w-100\">{isLoading ? 'Loading' : t(\"Register\")}</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormRegister\r\n"]},"metadata":{},"sourceType":"module"}