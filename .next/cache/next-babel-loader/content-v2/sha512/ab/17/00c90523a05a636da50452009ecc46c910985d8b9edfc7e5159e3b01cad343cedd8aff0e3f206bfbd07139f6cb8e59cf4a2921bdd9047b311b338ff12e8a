{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router'; // elements\n\nimport { Input } from '../../elements/form';\nimport swal from 'sweetalert';\n\nconst ChangeEmail = ({\n  t\n}) => {\n  const router = useRouter();\n  const {\n    0: form,\n    1: setForm\n  } = useState({});\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false); // handle\n\n  const handleChange = e => {\n    const {\n      value,\n      id\n    } = e.target;\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [id]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    if (form.newEmail) {\n      if (form.newEmail.includes(\"@\")) {\n        if (form.confirmEmail) {\n          if (form.confirmEmail.includes(\"@\")) {\n            if (form.newEmail === form.confirmEmail) {\n              if (form.password) {\n                swal({\n                  title: `${t(\"Confirm Change Email\")}`,\n                  text: `${t(\"Are you sure you want to change email\")} ?`,\n                  icon: \"warning\",\n                  buttons: true,\n                  dangerMode: true\n                }).then(willDelete => {\n                  if (willDelete) {\n                    swal(`${t(\"Email Changed Successfully\")}`, `${t(\"A link to confirm your replacement email has been sent, Please check your email inbox\")}`, \"success\").then(() => {\n                      router.push('/accountdetail');\n                    });\n                    setError({});\n                    setIsLoading(false);\n                  } else {\n                    setIsLoading(false);\n                  }\n                });\n              } else {\n                setError({\n                  password: `${t(\"Password\")} ${t(\"common:cannot be empty\")}`\n                });\n                setIsLoading(false);\n              }\n            } else {\n              setError({\n                confirmEmail: `${t(\"The confirmation email must match the new email\")}`\n              });\n              setIsLoading(false);\n            }\n          } else {\n            setError({\n              confirmEmail: `${t(\"common:wrong format\")}`\n            });\n            setIsLoading(false);\n          }\n        } else {\n          setError({\n            confirmEmail: `Email ${t(\"common:cannot be empty\")}`\n          });\n          setIsLoading(false);\n        }\n      } else {\n        setError({\n          newEmail: `${t(\"common:wrong format\")}`\n        });\n        setIsLoading(false);\n      }\n    } else {\n      setError({\n        newEmail: `Email ${t(\"common:cannot be empty\")}`\n      });\n      setIsLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"col-12 col-lg-4\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          className: \"title-change-email\",\n          children: t(\"Change Email\")\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"desc-change-email\",\n          children: t(\"Please fill in the following form to change the email\")\n        })]\n      }), /*#__PURE__*/_jsxs(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsx(Input, {\n          id: \"newEmail\",\n          type: \"text\",\n          error: error.newEmail,\n          label: t(\"New Email\"),\n          onChange: handleChange\n        }), /*#__PURE__*/_jsx(Input, {\n          id: \"confirmEmail\",\n          type: \"email\",\n          error: error.confirmEmail,\n          label: t(\"Confirm Email\"),\n          onChange: handleChange\n        }), /*#__PURE__*/_jsx(Input, {\n          id: \"password\",\n          type: \"password\",\n          error: error.password,\n          label: t(\"Password\"),\n          onChange: handleChange\n        }), /*#__PURE__*/_jsx(\"button\", {\n          disabled: isLoading,\n          type: \"submit\",\n          className: \"btn btn-primary py-3 w-100\",\n          children: isLoading ? 'Loading' : t(\"Change\")\n        })]\n      })]\n    })\n  });\n};\n\nexport default ChangeEmail;","map":null,"metadata":{},"sourceType":"module"}