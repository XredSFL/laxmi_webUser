{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\luarKampus\\\\Magang\\\\Bestada\\\\laxmi.front.web.user\\\\components\\\\partials\\\\login\\\\formLogin.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport useTranslation from 'next-translate/useTranslation';\nimport React, { useState, useEffect } from 'react'; // redux\n\nimport { connect } from 'react-redux';\nimport { logout, loginAction, enterPage } from '../../../stores'; // elements\n\nimport { Input } from '../../../components/elements/form';\n\nconst formLogin = ({\n  authData,\n  loginAction,\n  enterPage\n}) => {\n  const router = useRouter();\n  const {\n    0: form,\n    1: setForm\n  } = useState({});\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    t\n  } = useTranslation(\"login\");\n  useEffect(() => {\n    enterPage();\n    setError({\n      email: \"\",\n      password: \"\"\n    });\n  }, []);\n  useEffect(() => {\n    console.log('FORM ', forms);\n  }, []);\n  useEffect(() => {\n    console.log(authData);\n    console.log(authData.error);\n    setError({\n      email: authData.error\n    });\n  }, [authData.error]);\n\n  const validateForm = () => {\n    let valid = true;\n\n    var newErrors = _objectSpread({}, error);\n\n    if (!form.email) {\n      newErrors.email = `Email ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else if (!form.email.includes(\"@\")) {\n      newErrors.email = `Email ${t(\"common:is not valid\")}`;\n      valid = false;\n    } else {\n      newErrors.email = null;\n    }\n\n    if (!form.password) {\n      newErrors.password = `Password ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else {\n      newErrors.password = null;\n    }\n\n    setError(newErrors);\n    return valid;\n  }; // handle\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      debugger;\n      loginAction(form, router);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      id\n    } = e.target; // debugger\n\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [id]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      type: \"text\",\n      error: error.email,\n      label: t(\"Email\"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"password\",\n      type: \"password\",\n      error: error.password,\n      label: t(\"Password\"),\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check d-flex flex-row row justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-sm-6 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/login/forgotpassword\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [t(\"Forgot Password\"), \" ?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: authData.isLoading,\n      type: \"submit\",\n      className: \"btn btn-primary w-100 py-3\",\n      children: authData.isLoading ? 'Loading' : t(\"common:Login\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\nconst mapStateToProps = state => {\n  return {\n    authData: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(logout()),\n    loginAction: (form, router) => dispatch(loginAction(form, router)),\n    enterPage: () => dispatch(enterPage())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formLogin);","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/login/formLogin.jsx"],"names":["Link","useRouter","useTranslation","React","useState","useEffect","connect","logout","loginAction","enterPage","Input","formLogin","authData","router","form","setForm","error","setError","t","email","password","console","log","forms","validateForm","valid","newErrors","includes","handleSubmit","e","preventDefault","handleChange","value","id","target","isLoading","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport { useRouter } from 'next/router'\r\nimport useTranslation from 'next-translate/useTranslation';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// redux\r\nimport { connect } from 'react-redux'\r\nimport { logout, loginAction, enterPage } from '../../../stores';\r\n\r\n// elements\r\nimport { Input } from '../../../components/elements/form';\r\n\r\nconst formLogin = ({ authData, loginAction, enterPage }) => {\r\n    const router = useRouter()\r\n\r\n    const [form, setForm] = useState({})\r\n    const [error, setError] = useState({})\r\n\r\n    const { t } = useTranslation(\"login\")\r\n\r\n    useEffect(() => {\r\n        enterPage()\r\n        setError({\r\n            email: \"\",\r\n            password: \"\"\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('FORM ', forms)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(authData);\r\n        console.log(authData.error);\r\n        setError({\r\n            email: authData.error,\r\n        })\r\n    }, [authData.error]);\r\n\r\n    const validateForm = () => {\r\n        let valid = true;\r\n        var newErrors = { ...error }\r\n\r\n        if (!form.email) {\r\n            newErrors.email = `Email ${t(\"common:cannot be empty\")}`;\r\n            valid = false;\r\n        } else if (!form.email.includes(\"@\")) {\r\n            newErrors.email = `Email ${t(\"common:is not valid\")}`;\r\n            valid = false;\r\n        } else {\r\n            newErrors.email = null\r\n        }\r\n        if (!form.password) {\r\n            newErrors.password = `Password ${t(\"common:cannot be empty\")}`;\r\n            valid = false;\r\n        } else {\r\n            newErrors.password = null\r\n        }\r\n        setError(newErrors);\r\n        return valid;\r\n    }\r\n\r\n    // handle\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validateForm()) {\r\n            debugger\r\n            loginAction(form, router)\r\n        }\r\n    }\r\n    const handleChange = e => {\r\n        const { value, id } = e.target\r\n\r\n        // debugger\r\n        setForm({\r\n            ...form,\r\n            [id]: value\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* {\r\n                authData.error ? \r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {authData.error}\r\n                </div> : null     \r\n            }             */}\r\n            <Input\r\n                id=\"email\"\r\n                type=\"text\"\r\n                error={error.email}\r\n                label={t(\"Email\")}\r\n                onChange={handleChange}\r\n            />\r\n            <Input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                error={error.password}\r\n                label={t(\"Password\")}\r\n                onChange={handleChange}\r\n            />\r\n            <div className=\"form-check d-flex flex-row row justify-content-between\">\r\n                <div className=\"col-12 col-sm-6\">\r\n                    {/* <input \r\n                        type=\"checkbox\" \r\n                        className=\"form-check-input\" \r\n                        id=\"remember\" />\r\n                    <label \r\n                        className=\"form-check-label\" \r\n                        htmlFor=\"remember\">{t(\"Remember Me\")}</label> */}\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 d-flex justify-content-end\">\r\n                    <Link href='/login/forgotpassword'>\r\n                        <a>{t(\"Forgot Password\")} ?</a>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <button\r\n                disabled={authData.isLoading}\r\n                type=\"submit\"\r\n                className=\"btn btn-primary w-100 py-3\">{authData.isLoading ? 'Loading' : t(\"common:Login\")}</button>\r\n        </form>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        authData: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(logout()),\r\n        loginAction: (form, router) => dispatch(loginAction(form, router)),\r\n        enterPage: () => dispatch(enterPage())\r\n    }\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(formLogin)\r\n"]},"metadata":{},"sourceType":"module"}