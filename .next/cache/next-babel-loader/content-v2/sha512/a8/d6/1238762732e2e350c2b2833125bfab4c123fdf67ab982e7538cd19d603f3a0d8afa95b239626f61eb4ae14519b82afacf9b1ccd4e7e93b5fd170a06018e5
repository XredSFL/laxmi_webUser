{"ast":null,"code":"import axios from \"../../../helpers/axiosConfig\";\nimport jwtDecode from 'jwt-decode';\nexport default async function handler(req, res) {\n  if (req.method === 'POST') {\n    console.log(\"whatever\");\n    const {\n      category,\n      fabric,\n      collar,\n      cuffs,\n      sleeve,\n      bottom,\n      chest_pocket\n    } = req.body;\n    axios.post(\"/cart\", {\n      category: category,\n      fabric: fabric,\n      collar: collar,\n      cuffs: cuffs,\n      sleeve: sleeve,\n      bottom: bottom,\n      chest_pocket: chest_pocket,\n      price: 0,\n      placket: 'aa'\n    }).then(response => {\n      const {\n        status,\n        message\n      } = response.data;\n      console.log(\"responses\");\n      console.log(response);\n\n      if (status) {\n        const {\n          category,\n          fabric,\n          collar,\n          cuffs,\n          sleeve,\n          bottom,\n          chest_pocket\n        } = response.data.data;\n        res.status(200).json({\n          \"status\": true,\n          \"message\": \"Add Cart success\",\n          \"data\": {\n            \"category\": category,\n            \"fabric\": fabric,\n            \"collar\": collar,\n            \"cuffs\": cuffs,\n            \"sleeve\": sleeve,\n            \"bottom\": bottom,\n            \"chest_pocket\": chest_pocket\n          }\n        });\n      } else {\n        res.status(200).json({\n          \"status\": false,\n          \"message\": message\n        });\n      }\n    }).catch(e => {\n      const {\n        message\n      } = e.response.data;\n      res.status(200).json({\n        \"status\": false,\n        \"message\": message\n      });\n    });\n  }\n\n  if (req.method === 'GET') {\n    axios.get(`/cart`).then(response => {\n      const {\n        status,\n        message,\n        data\n      } = response.data;\n\n      if (status) {\n        res.status(200).json({\n          \"status\": true,\n          \"message\": \"Get Cart success\",\n          \"data\": data\n        });\n      } else {\n        res.status(200).json({\n          \"status\": false,\n          \"message\": message\n        });\n      }\n    }).catch(e => {\n      var _e$response, _e$response2, _e$response2$data;\n\n      console.error('Error during GET request:', e.message); // Log the error message\n\n      console.error('Response data:', (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data); // Log the response data if available\n\n      const message = ((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message) || \"An error occurred\";\n      res.status(500).json({\n        status: false,\n        message\n      });\n    });\n    res.status(200).json({\n      \"status\": false,\n      \"message\": response.data\n    });\n  }\n}","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/pages/api/cart/cart.js"],"names":["axios","jwtDecode","handler","req","res","method","console","log","category","fabric","collar","cuffs","sleeve","bottom","chest_pocket","body","post","price","placket","then","response","status","message","data","json","catch","e","get","error"],"mappings":"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","sourcesContent":["import axios from \"../../../helpers/axiosConfig\"\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method === 'POST') {\r\n        console.log(\"whatever\")\r\n        const { category, fabric, collar, cuffs, sleeve, bottom, chest_pocket} = req.body\r\n        axios.post(\"/cart\", {\r\n            \r\n            category: category,\r\n            fabric: fabric,\r\n            collar: collar,\r\n            cuffs: cuffs,\r\n            sleeve: sleeve,\r\n            bottom: bottom,\r\n            chest_pocket: chest_pocket,\r\n            price:0,\r\n            placket:'aa',\r\n            \r\n        }).then((response) => {\r\n            const { status, message } = response.data\r\n            console.log(\"responses\")\r\n            console.log(response)\r\n            if (status) {\r\n                const { category, fabric, collar, cuffs, sleeve, bottom, chest_pocket } = response.data.data\r\n                res.status(200).json({\r\n                    \"status\": true,\r\n                    \"message\": \"Add Cart success\",\r\n                    \"data\": {\r\n                        \"category\" : category,\r\n                        \"fabric\" : fabric,\r\n                        \"collar\" : collar,\r\n                        \"cuffs\" : cuffs,\r\n                        \"sleeve\" : sleeve,\r\n                        \"bottom\" : bottom,\r\n                        \"chest_pocket\" : chest_pocket,\r\n                    }\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    \"status\": false,\r\n                    \"message\": message\r\n                })\r\n            }\r\n        }).catch((e) => {\r\n            const { message } = e.response.data\r\n            res.status(200).json({\r\n                \"status\": false,\r\n                \"message\": message,\r\n            })\r\n        })\r\n    } \r\n    \r\n    if (req.method === 'GET') {\r\n        \r\n        axios.get(`/cart`).then((response) => {\r\n            const { status, message, data } = response.data\r\n            if (status) {\r\n                res.status(200).json({\r\n                    \"status\": true,\r\n                    \"message\": \"Get Cart success\",\r\n                    \"data\": data\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    \"status\": false,\r\n                    \"message\": message\r\n                })\r\n            }\r\n        }).catch((e) => {\r\n            console.error('Error during GET request:', e.message); // Log the error message\r\n            console.error('Response data:', e.response?.data); // Log the response data if available\r\n            const message = e.response?.data?.message || \"An error occurred\";\r\n            res.status(500).json({\r\n                status: false,\r\n                message,\r\n            });\r\n        })\r\n        res.status(200).json({\r\n            \"status\": false,\r\n            \"message\": response.data\r\n        })\r\n        \r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}