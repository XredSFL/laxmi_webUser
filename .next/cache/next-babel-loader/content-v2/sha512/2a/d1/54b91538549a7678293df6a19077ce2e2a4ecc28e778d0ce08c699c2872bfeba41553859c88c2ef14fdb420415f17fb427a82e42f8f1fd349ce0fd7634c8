{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\"; // import frenchPlacket from \"../../../public/img/placket/Placket French.svg\";\n\nimport { useRouter } from \"next/router\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport { BlazerListStyle, ShirtListStyle, TrouserListStyle, VestListStyle, BatikListStyle } from './sidebar/dataSidebar';\nconst initStyle = {\n  \"bottom\": {\n    \"image\": \"\",\n    \"name\": \"Square\"\n  },\n  \"collar\": {\n    \"image\": \"\",\n    \"name\": \"Stand Up\"\n  },\n  \"collarBack\": {\n    \"image\": \"/img/pleats/red/Collar Back.svg\",\n    \"name\": \"Stand Up\"\n  },\n  \"sleeve\": {\n    \"image\": \"\",\n    \"name\": \"Short\"\n  },\n  \"cuffs\": {\n    \"image\": \"\",\n    \"name\": \"One Button Cut\"\n  },\n  \"cuffsBack\": {\n    \"image\": \"/img/sleeve_back/Cuffs Double Rounded French Back.svg\",\n    \"name\": \"Square French\"\n  },\n  \"pocket\": {\n    \"image\": \"\",\n    \"name\": \"With Flap\"\n  },\n  \"placket\": {\n    \"image\": \"\",\n    \"name\": \"Standard Body Untucked With Square\"\n  },\n  \"pleats\": {\n    \"image\": \"/img/pleats/red/Pleats Box Tucked.svg\",\n    \"name\": \"Pleats\"\n  },\n  \"collarFold\": {\n    \"image\": \"\"\n  },\n  \"cuffsFold\": {\n    \"image\": \"\"\n  },\n  \"pocketFold\": {\n    \"image\": \"\" // \"image\":\"/img/pleats/red/Chest Pocket Folded.svg\"\n\n  },\n  \"placketFold\": {\n    \"image\": \"/img/folded/red/pleats/Placket Standard Body Folded.svg\"\n  }\n};\n\nconst useHookCustom = () => {\n  const router = useRouter();\n  const {\n    0: fabricList,\n    1: setFabricList\n  } = useState([]);\n  const {\n    0: fabricSelect,\n    1: setFabricSelect\n  } = useState(null);\n  const {\n    0: listStyle,\n    1: setListStyle\n  } = useState([]);\n  const {\n    0: openStyle,\n    1: setOpenStyle\n  } = useState(false);\n  const {\n    0: styleSelect,\n    1: setStyleSelect\n  } = useState(null);\n  const {\n    0: dataStyle,\n    1: setDataStyle\n  } = useState(initStyle);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isLoadingFabric,\n    1: setIsLoadingFabric\n  } = useState(false);\n  const {\n    category\n  } = router.query;\n  const {\n    0: pov,\n    1: setPov\n  } = useState(\"FRONT\");\n  const fabricSelectRef = useRef(null);\n  var fabric;\n  useEffect(() => {\n    if (fabricSelect) {\n      getCustomStyle();\n      fabricSelectRef.current = fabricSelect;\n    }\n  }, [fabricSelect]);\n  useEffect(() => {\n    setIsLoadingFabric(true);\n    console.log(\"ini new pov\", pov);\n\n    if (!fabricSelect && fabricSelectRef.current) {\n      setFabricSelect(fabricSelectRef.current);\n    } else {\n      getCustomStyle();\n    }\n  }, [pov]);\n\n  const updatePov = (newPov, newFabric) => {\n    setPov(newPov);\n    setFabricSelect(newFabric);\n  };\n\n  useEffect(() => {\n    getCustomStyle();\n  }, []);\n  useEffect(async () => {\n    try {\n      var response = await axios.get(\"/api/fabric/list\");\n      const {\n        status,\n        message\n      } = response.data;\n\n      if (status) {\n        const {\n          data\n        } = response.data;\n        setFabricList(data);\n      } else {\n        setFabricList([]);\n      }\n    } catch (e) {\n      setFabricList([]);\n    }\n  }, []);\n  useEffect(async () => {\n    setIsLoadingFabric(true);\n    getCustomStyle();\n  }, [fabricSelect]);\n  useEffect(() => {\n    console.log(\"DataStyle:\", dataStyle);\n  }, [dataStyle]);\n  useEffect(() => {\n    setIsLoading(true);\n    console.log(styleSelect);\n\n    const newDataStyle = _objectSpread({}, dataStyle);\n\n    switch (styleSelect === null || styleSelect === void 0 ? void 0 : styleSelect.title) {\n      case \"Collar\":\n        newDataStyle.collar.name = styleSelect.name;\n        break;\n\n      case \"Sleeve\":\n        newDataStyle.sleeve.name = styleSelect.name;\n        break;\n\n      case \"Bottom\":\n        newDataStyle.bottom.name = styleSelect.name;\n        break;\n\n      case \"Chest Pocket\":\n        newDataStyle.pocket.name = styleSelect.name;\n        break;\n\n      case \"Cuffs\":\n        newDataStyle.cuffs.name = styleSelect.name;\n        newDataStyle.cuffsBack.name = styleSelect.name;\n        newDataStyle.sleeve.name = \"Long\";\n        break;\n\n      case \"Placket\":\n        newDataStyle.placket.name = styleSelect.name;\n      // case \"Pleats\":\n      //     newDataStyle.pleats.name = styleSelect.name\n\n      default:\n        break;\n    }\n\n    getCustomStyle();\n  }, [styleSelect]);\n  useEffect(() => {\n    switch (category) {\n      case 'vests':\n        setListStyle(VestListStyle);\n        break;\n\n      case 'batiks':\n        setListStyle(BatikListStyle);\n        break;\n\n      case 'shirts':\n        setListStyle(ShirtListStyle);\n        break;\n\n      case 'trousers':\n        setListStyle(TrouserListStyle);\n        break;\n\n      case 'blazer':\n        setListStyle(BlazerListStyle);\n        break;\n    }\n  }, [category]);\n\n  const getCustomStyle = async () => {\n    const currentFabricSelect = fabricSelect || fabricSelectRef.current;\n    console.log(currentFabricSelect);\n\n    if (!currentFabricSelect) {\n      console.log(\"No fabric selected\");\n      setIsLoadingFabric(false);\n      return;\n    }\n\n    try {\n      var _data$styles$collar, _data$styles$collar2, _data$styles$sleeve, _data$styles$sleeve2, _data$styles$chestpoc, _data$styles$chestpoc2, _data$styles$placket, _data$styles$placket2;\n\n      let placketName = \"\",\n          isTucked = false;\n\n      if (dataStyle.placket.name.split(\" \").length > 1) {\n        //* Check apakah isi nya \"Standar\" atau sudah lengkap dengan \"Body Untucked With Square\"\n        placketName = dataStyle.placket.name;\n      } else {\n        placketName = dataStyle.placket.name.concat(\" Body\", isTucked ? \"\" : \"Untucked\", \"With Square\");\n      }\n\n      var url = `/api/custom/custom_style?fabric=${currentFabricSelect._id}&collar=${dataStyle.collar.name}&cuffs=${dataStyle.cuffs.name}&sleeve=${dataStyle.sleeve.name}&bottom=${dataStyle.bottom.name}&chestpocket=${dataStyle.pocket.name}&placket=${dataStyle.placket.name}&pov=${pov}`;\n      var response = await axios.get(url);\n      console.log(url);\n      const {\n        status,\n        data\n      } = response.data;\n      console.log(data);\n\n      const newDataStyle = _objectSpread({}, dataStyle); // newDataStyle.bottom.name = data.bottom.name\n      // newDataStyle.bottom.image = data.bottom.image\n\n\n      newDataStyle.collar.name = ((_data$styles$collar = data.styles.collar) === null || _data$styles$collar === void 0 ? void 0 : _data$styles$collar.name) || \"\";\n      newDataStyle.collar.image = ((_data$styles$collar2 = data.styles.collar) === null || _data$styles$collar2 === void 0 ? void 0 : _data$styles$collar2.image) || \"\";\n      newDataStyle.sleeve.name = ((_data$styles$sleeve = data.styles.sleeve) === null || _data$styles$sleeve === void 0 ? void 0 : _data$styles$sleeve.name) || \"\";\n      newDataStyle.sleeve.image = ((_data$styles$sleeve2 = data.styles.sleeve) === null || _data$styles$sleeve2 === void 0 ? void 0 : _data$styles$sleeve2.image) || \"\";\n      newDataStyle.pocket.name = ((_data$styles$chestpoc = data.styles.chestpocket) === null || _data$styles$chestpoc === void 0 ? void 0 : _data$styles$chestpoc.name) || \"\";\n      newDataStyle.pocket.image = ((_data$styles$chestpoc2 = data.styles.chestpocket) === null || _data$styles$chestpoc2 === void 0 ? void 0 : _data$styles$chestpoc2.image) || \"\";\n      newDataStyle.placket.name = ((_data$styles$placket = data.styles.placket) === null || _data$styles$placket === void 0 ? void 0 : _data$styles$placket.name) || \"\";\n      newDataStyle.placket.image = ((_data$styles$placket2 = data.styles.placket) === null || _data$styles$placket2 === void 0 ? void 0 : _data$styles$placket2.image) || \"\";\n      fabric = fabricSelect;\n      console.log(fabricSelect._id);\n      setDataStyle(newDataStyle);\n      console.log(newDataStyle); // if(fabricSelect._id===\"6705fffa8f14879009126d1d\"){\n\n      newDataStyle.pleats.image = \"/img/pleats/red/Pleats Box Tucked.svg\";\n      newDataStyle.collarBack.image = \"/img/pleats/red/Collar Back.svg\";\n\n      if (dataStyle.placket.name === \"French\") {\n        newDataStyle.placketFold.image = \"/img/folded/red/pleats/Placket French Body Folded.svg\";\n      } else if (dataStyle.placket.name === \"Hidden\") {\n        newDataStyle.placketFold.image = \"/img/folded/red/pleats/Placket Hidden Body Folded.svg\";\n      } else if (dataStyle.placket.name === \"Standard\") {\n        newDataStyle.placketFold.image = \"/img/folded/red/pleats/Placket Standard Body Folded.svg\";\n      }\n\n      if (dataStyle.collar.name === \"Stand Up\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Stand Up Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Button Down\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Button Down Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Cutaway\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Cutaway Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Kent Collar\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Kent Collar Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"New Kent\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar New Kent Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Pinned\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Pinned Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Rounded\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Rounded Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Wing\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Wing Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Long\") {\n        newDataStyle.collarFold.image = \"/img/folded/red/collar/Collar Long Placket French Folded.svg\";\n      } else if (dataStyle.collar.name === \"Short Classic\") {}\n\n      if (dataStyle.pocket.name === \"No Pocket\") {} else if (dataStyle.pocket.name === \"Standard\") {\n        newDataStyle.pocketFold.image = \"/img/folded/red/pocket/Chestpocket Standard Folded.svg\";\n      } else if (dataStyle.pocket.name === \"With Flap\") {\n        newDataStyle.pocketFold.image = \"/img/folded/red/pocket/Chestpocket With Flap Folded.svg\";\n      } else if (dataStyle.pocket.name === \"Double Standard\") {\n        newDataStyle.pocketFold.image = \"/img/folded/red/pocket/Chestpocket Double Standard Folded.svg\";\n      } else if (dataStyle.pocket.name === \"Double With Flap\") {\n        newDataStyle.pocketFold.image = \"/img/folded/red/pocket/Chestpocket Double With Flap Folded.svg\";\n      }\n\n      if (dataStyle.cuffs.name === \"Double Rounded French\") {\n        newDataStyle.cuffsFold.image = \"/img/folded/red/sleeve/Cuffs Double Rounded French Folded.svg\";\n      } else if (dataStyle.cuffs.name === \"Double Square French\") {} else if (dataStyle.cuffs.name === \"Rounded One\") {\n        newDataStyle.cuffsFold.image = \"/img/folded/red/sleeve/Cuffs Rounded One Button Folded.svg\";\n      } else if (dataStyle.cuffs.name === \"Rounded Two\") {} else if (dataStyle.cuffs.name === \"Square French\") {\n        newDataStyle.cuffsFold.image = \"/img/folded/red/sleeve/Cuffs Square French Folded.svg\";\n      } else if (dataStyle.cuffs.name === \"Single One Button\") {} else if (dataStyle.cuffs.name === \"Single Two Button\") {} else if (dataStyle.cuffs.name === \"One Button Cut\") {\n        newDataStyle.cuffsFold.image = \"/img/folded/red/sleeve/Cuffs One Button Cut  Folded.svg\";\n      } else if (dataStyle.cuffs.name === \"Two Button Cut\") {} else if (dataStyle.cuffs.name === \"Short\") {\n        newDataStyle.cuffsFold.image = \"/img/folded/red/sleeve/Sleeve Short Folded.svg\";\n      }\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 700);\n      setTimeout(() => {\n        setIsLoadingFabric(false);\n      }, 1000);\n    }\n  };\n\n  return {\n    openStyle,\n    listStyle,\n    fabricList,\n    styleSelect,\n    fabricSelect,\n    dataStyle,\n    isLoading,\n    isLoadingFabric,\n    pov,\n    updatePov,\n    setPov,\n    setDataStyle,\n    setIsLoading,\n    setOpenStyle,\n    setFabricList,\n    setStyleSelect,\n    setFabricSelect,\n    setIsLoadingFabric\n  };\n};\n\nexport default useHookCustom;","map":null,"metadata":{},"sourceType":"module"}