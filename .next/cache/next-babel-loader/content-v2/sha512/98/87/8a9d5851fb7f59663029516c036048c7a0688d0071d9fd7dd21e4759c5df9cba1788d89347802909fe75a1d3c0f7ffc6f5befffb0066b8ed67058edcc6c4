{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\luarKampus\\\\Magang\\\\Bestada\\\\laxmi.front.web.user\\\\components\\\\partials\\\\webInformation\\\\termCondition\\\\termConditionContainer.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport parse from 'html-react-parser'; // helper\n\nimport Axios from '../../../../helpers/axiosConfig';\n\nvar TermConditionContainer = function TermConditionContainer() {\n  _s();\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    Axios.get(\"/web_info/term_and_condition\").then(function (response) {\n      var _response$data = response.data,\n          data = _response$data.data,\n          status = _response$data.status,\n          message = _response$data.message;\n\n      if (status) {\n        setData(data);\n      } else {\n        setError(message);\n      }\n    })[\"catch\"](function (error) {\n      setError(error.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"html-parse container-fluid px-5\",\n    children: data ? parse(data.description) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TermConditionContainer, \"f9D9wW0XL5lI+CsoJjXDxYLN8MU=\");\n\n_c = TermConditionContainer;\nexport default TermConditionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TermConditionContainer\");","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/webInformation/termCondition/termConditionContainer.jsx"],"names":["React","useState","useEffect","parse","Axios","TermConditionContainer","data","setData","error","setError","get","then","response","status","message","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AAAA;;AAAA,kBACVJ,QAAQ,CAAC,IAAD,CADE;AAAA,MAC1BK,IAD0B;AAAA,MACrBC,OADqB;;AAAA,mBAERN,QAAQ,CAAC,IAAD,CAFA;AAAA,MAE1BO,KAF0B;AAAA,MAEpBC,QAFoB;;AAIjCP,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,KAAK,CAACM,GAAN,iCACCC,IADD,CACM,UAAAC,QAAQ,EAAI;AAAA,2BACgBA,QAAQ,CAACN,IADzB;AAAA,UACPA,IADO,kBACPA,IADO;AAAA,UACFO,MADE,kBACFA,MADE;AAAA,UACKC,OADL,kBACKA,OADL;;AAEd,UAAGD,MAAH,EAAU;AACNN,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAFD,MAEK;AACDG,QAAAA,QAAQ,CAACK,OAAD,CAAR;AACH;AACJ,KARD,WASO,UAAAN,KAAK,EAAI;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACM,OAAP,CAAR;AACH,KAXD;AAYH,GAbQ,EAaP,EAbO,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,cAEQR,IAAI,GACJH,KAAK,CAACG,IAAI,CAACS,WAAN,CADD,GAGJP,KAAK,gBACL;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,aADK,gBAEL;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA/BD;;GAAMH,sB;;KAAAA,sB;AAiCN,eAAeA,sBAAf","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\n\r\n// helper\r\nimport Axios from '../../../../helpers/axiosConfig'\r\n\r\nconst TermConditionContainer = () => {\r\n    const [data,setData] = useState(null)\r\n    const [error,setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        Axios.get(`/web_info/term_and_condition`)\r\n        .then(response => {\r\n            const {data,status,message} = response.data\r\n            if(status){\r\n                setData(data)\r\n            }else{\r\n                setError(message)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.message)\r\n        })      \r\n    },[]);\r\n    \r\n    return (\r\n        <div className=\"html-parse container-fluid px-5\">\r\n            {\r\n                data ?\r\n                parse(data.description)\r\n                :\r\n                error ?\r\n                <p className=\"text-center\">{error}</p> : \r\n                <div className=\"loader\"></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TermConditionContainer ;"]},"metadata":{},"sourceType":"module"}