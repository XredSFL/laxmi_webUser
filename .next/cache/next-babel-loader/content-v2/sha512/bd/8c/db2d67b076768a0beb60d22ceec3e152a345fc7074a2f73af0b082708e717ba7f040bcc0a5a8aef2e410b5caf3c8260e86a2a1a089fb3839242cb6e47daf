{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport useTranslation from 'next-translate/useTranslation';\nimport React, { useState, useEffect } from 'react'; // redux\n\nimport { connect } from 'react-redux';\nimport { logout, loginAction, enterPage } from '../../../stores'; // elements\n\nimport { Input } from '../../../components/elements/form';\n\nconst formLogin = ({\n  authData,\n  loginAction,\n  enterPage\n}) => {\n  const router = useRouter();\n  const {\n    0: form,\n    1: setForm\n  } = useState({});\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n  const {\n    t\n  } = useTranslation(\"login\");\n  useEffect(() => {\n    enterPage();\n    setError({\n      email: \"\",\n      password: \"\"\n    });\n  }, []);\n  useEffect(() => {\n    console.log('FORM ', form);\n  }, []);\n  useEffect(() => {\n    console.log(authData);\n    console.log(authData.error);\n    setError({\n      email: authData.error\n    });\n  }, [authData.error]);\n\n  const validateForm = () => {\n    let valid = true;\n\n    var newErrors = _objectSpread({}, error);\n\n    if (!form.email) {\n      newErrors.email = `Email ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else if (!form.email.includes(\"@\")) {\n      newErrors.email = `Email ${t(\"common:is not valid\")}`;\n      valid = false;\n    } else {\n      newErrors.email = null;\n    }\n\n    if (!form.password) {\n      newErrors.password = `Password ${t(\"common:cannot be empty\")}`;\n      valid = false;\n    } else {\n      newErrors.password = null;\n    }\n\n    setError(newErrors);\n    return valid;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      debugger;\n      loginAction(form, router);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      id\n    } = e.target;\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [id]: value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsx(Input, {\n      id: \"email\",\n      type: \"text\",\n      error: error.email,\n      label: t(\"Email\"),\n      onChange: handleChange\n    }), /*#__PURE__*/_jsx(Input, {\n      id: \"password\",\n      type: \"password\",\n      error: error.password,\n      label: t(\"Password\"),\n      onChange: handleChange\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"form-check d-flex flex-row row justify-content-between\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12 col-sm-6\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"col-12 col-sm-6 d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/login/forgotpassword\",\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            children: [t(\"Forgot Password\"), \" ?\"]\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsx(\"button\", {\n      disabled: authData.isLoading,\n      type: \"submit\",\n      className: \"btn btn-primary w-100 py-3\",\n      children: authData.isLoading ? 'Loading' : t(\"common:Login\")\n    })]\n  });\n};\n\nconst mapStateToProps = state => {\n  return {\n    authData: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logout: () => dispatch(logout()),\n    loginAction: (form, router) => dispatch(loginAction(form, router)),\n    enterPage: () => dispatch(enterPage())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formLogin);","map":null,"metadata":{},"sourceType":"module"}