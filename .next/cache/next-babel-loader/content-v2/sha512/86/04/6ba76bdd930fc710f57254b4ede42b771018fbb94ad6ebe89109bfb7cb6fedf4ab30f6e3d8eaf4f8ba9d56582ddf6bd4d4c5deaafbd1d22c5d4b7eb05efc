{"ast":null,"code":"import axios from \"../../../helpers/axiosConfig\";\nimport jwtDecode from 'jwt-decode';\nexport default async function handler(req, res) {\n  console.log(req.body);\n\n  if (req.method === 'POST') {\n    const {\n      category,\n      fabric,\n      collar,\n      cuffs,\n      sleeve,\n      bottom,\n      chest_pocket\n    } = req.body;\n    axios.post(\"/cart\", {\n      category: category,\n      fabric: fabric,\n      collar: collar,\n      cuffs: cuffs,\n      sleeve: sleeve,\n      bottom: bottom,\n      chest_pocket: chest_pocket\n    }).then(response => {\n      const {\n        status,\n        message\n      } = response.data;\n      console.log(\"responses\");\n      console.log(response);\n\n      if (status) {\n        const {\n          category,\n          fabric,\n          collar,\n          cuffs,\n          sleeve,\n          bottom,\n          chest_pocket,\n          placket,\n          price\n        } = response.data.data;\n        const jsonDecode = jwtDecode(token);\n        console.log(jsonDecode);\n        res.status(200).json({\n          \"status\": true,\n          \"message\": \"Add Cart success\",\n          \"data\": {\n            \"category\": category,\n            \"fabric\": fabric,\n            \"collar\": collar,\n            \"cuffs\": cuffs,\n            \"sleeve\": sleeve,\n            \"bottom\": bottom,\n            \"chest_pocket\": chest_pocket,\n            \"placket\": placket,\n            \"price\": price\n          }\n        });\n      } else {\n        res.status(200).json({\n          \"status\": false,\n          \"message\": message\n        });\n      }\n    }).catch(e => {\n      const {\n        message\n      } = e.response.data;\n      res.status(200).json({\n        \"status\": false,\n        \"message\": message\n      });\n    });\n  }\n}","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/pages/api/cart/cart.js"],"names":["axios","jwtDecode","handler","req","res","console","log","body","method","category","fabric","collar","cuffs","sleeve","bottom","chest_pocket","post","then","response","status","message","data","placket","price","jsonDecode","token","json","catch","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,8BAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;;AACA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,MAAnB,EAA2B;AACvB,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA,MAApB;AAA4BC,MAAAA,KAA5B;AAAmCC,MAAAA,MAAnC;AAA2CC,MAAAA,MAA3C;AAAmDC,MAAAA;AAAnD,QAAmEZ,GAAG,CAACI,IAA7E;AACAP,IAAAA,KAAK,CAACgB,IAAN,CAAW,OAAX,EAAoB;AAChBP,MAAAA,QAAQ,EAAEA,QADM;AAEhBC,MAAAA,MAAM,EAAEA,MAFQ;AAGhBC,MAAAA,MAAM,EAAEA,MAHQ;AAIhBC,MAAAA,KAAK,EAAEA,KAJS;AAKhBC,MAAAA,MAAM,EAAEA,MALQ;AAMhBC,MAAAA,MAAM,EAAEA,MANQ;AAOhBC,MAAAA,YAAY,EAAEA;AAPE,KAApB,EAQGE,IARH,CAQSC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAsBF,QAAQ,CAACG,IAArC;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;;AACA,UAAIC,MAAJ,EAAY;AACR,cAAM;AAAEV,UAAAA,QAAF;AAAYC,UAAAA,MAAZ;AAAoBC,UAAAA,MAApB;AAA4BC,UAAAA,KAA5B;AAAmCC,UAAAA,MAAnC;AAA2CC,UAAAA,MAA3C;AAAmDC,UAAAA,YAAnD;AAAiEO,UAAAA,OAAjE;AAA0EC,UAAAA;AAA1E,YAAoFL,QAAQ,CAACG,IAAT,CAAcA,IAAxG;AACA,cAAMG,UAAU,GAAGvB,SAAS,CAACwB,KAAD,CAA5B;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,UAAZ;AACApB,QAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AACjB,oBAAU,IADO;AAEjB,qBAAW,kBAFM;AAGjB,kBAAQ;AACJ,wBAAajB,QADT;AAEJ,sBAAWC,MAFP;AAGJ,sBAAWC,MAHP;AAIJ,qBAAUC,KAJN;AAKJ,sBAAWC,MALP;AAMJ,sBAAWC,MANP;AAOJ,4BAAiBC,YAPb;AAQJ,uBAAYO,OARR;AASJ,qBAAUC;AATN;AAHS,SAArB;AAeH,OAnBD,MAmBO;AACHnB,QAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AACjB,oBAAU,KADO;AAEjB,qBAAWN;AAFM,SAArB;AAIH;AACJ,KArCD,EAqCGO,KArCH,CAqCUC,CAAD,IAAO;AACZ,YAAM;AAAER,QAAAA;AAAF,UAAcQ,CAAC,CAACV,QAAF,CAAWG,IAA/B;AACAjB,MAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AACjB,kBAAU,KADO;AAEjB,mBAAWN;AAFM,OAArB;AAIH,KA3CD;AA4CH;AACJ","sourcesContent":["import axios from \"../../../helpers/axiosConfig\"\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport default async function handler(req, res) {\r\n    console.log(req.body);\r\n    if (req.method === 'POST') {\r\n        const { category, fabric, collar, cuffs, sleeve, bottom, chest_pocket} = req.body\r\n        axios.post(\"/cart\", {\r\n            category: category,\r\n            fabric: fabric,\r\n            collar: collar,\r\n            cuffs: cuffs,\r\n            sleeve: sleeve,\r\n            bottom: bottom,\r\n            chest_pocket: chest_pocket,\r\n        }).then((response) => {\r\n            const { status, message } = response.data\r\n            console.log(\"responses\")\r\n            console.log(response)\r\n            if (status) {\r\n                const { category, fabric, collar, cuffs, sleeve, bottom, chest_pocket, placket, price } = response.data.data\r\n                const jsonDecode = jwtDecode(token)\r\n                console.log(jsonDecode);\r\n                res.status(200).json({\r\n                    \"status\": true,\r\n                    \"message\": \"Add Cart success\",\r\n                    \"data\": {\r\n                        \"category\" : category,\r\n                        \"fabric\" : fabric,\r\n                        \"collar\" : collar,\r\n                        \"cuffs\" : cuffs,\r\n                        \"sleeve\" : sleeve,\r\n                        \"bottom\" : bottom,\r\n                        \"chest_pocket\" : chest_pocket,\r\n                        \"placket\" : placket,\r\n                        \"price\" : price\r\n                    }\r\n                })\r\n            } else {\r\n                res.status(200).json({\r\n                    \"status\": false,\r\n                    \"message\": message\r\n                })\r\n            }\r\n        }).catch((e) => {\r\n            const { message } = e.response.data\r\n            res.status(200).json({\r\n                \"status\": false,\r\n                \"message\": message,\r\n            })\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}