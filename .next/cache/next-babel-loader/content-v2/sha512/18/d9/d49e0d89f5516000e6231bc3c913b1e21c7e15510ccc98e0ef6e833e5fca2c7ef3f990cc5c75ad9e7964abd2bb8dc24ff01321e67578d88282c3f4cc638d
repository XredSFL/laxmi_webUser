{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, ENTER_PAGE, LOGOUT } from './types'; // axios\n\nimport axios from '../../helpers/axiosConfig';\nexport const loginAction = (form, router) => {\n  debugger;\n  return dispatch => {\n    dispatch(loginActionRequest());\n    axios.post('auth/signin', form).then(response => {\n      debugger;\n      console.log(response);\n      const {\n        status,\n        message\n      } = response.data;\n      debeugger;\n\n      if (status) {\n        dispatch(loginSuccess(response.data.data));\n        router.push('/');\n      } else {\n        dispatch(loginFailure(message));\n      }\n    }).catch(error => {\n      dispatch(loginFailure(error.message));\n    });\n  };\n};\nexport const loginActionRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = dataUser => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: dataUser\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: LOGOUT\n  };\n}; // ENTER LOGIN PAGE\n\nexport const enterPage = () => {\n  return {\n    type: ENTER_PAGE\n  };\n};\nexport const registerAction = form => {\n  return axios.post(`/api/auth/signup`, form).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      status: false,\n      message: error.message\n    };\n  });\n};\nexport const forgotAction1 = form => {\n  return axios.post(`/api/auth/forgot_p1`, form).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      status: false,\n      message: error.message\n    };\n  });\n};\nexport const forgotAction2 = form => {\n  return axios.post(`/api/auth/forgot_p2`, form).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      status: false,\n      message: error.message\n    };\n  });\n};\nexport const forgotAction3 = form => {\n  return axios.post(`/api/auth/forgot_p3`, form).then(response => {\n    return response.data;\n  }).catch(error => {\n    return {\n      status: false,\n      message: error.message\n    };\n  });\n};","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/stores/auth/actions.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","ENTER_PAGE","LOGOUT","axios","loginAction","form","router","dispatch","loginActionRequest","post","then","response","console","log","status","message","data","debeugger","loginSuccess","push","loginFailure","catch","error","type","dataUser","payload","logout","enterPage","registerAction","forgotAction1","forgotAction2","forgotAction3"],"mappings":"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","sourcesContent":["import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  ENTER_PAGE,\r\n  LOGOUT\r\n} from './types';\r\n\r\n// axios\r\nimport axios from '../../helpers/axiosConfig';\r\n\r\n\r\nexport const loginAction = (form, router) => {\r\n  debugger\r\n  return (dispatch) => {\r\n    dispatch(loginActionRequest())\r\n    axios\r\n      .post('auth/signin', form)\r\n      .then(response => {\r\n        debugger\r\n        console.log(response);\r\n        const { status, message } = response.data;\r\n        debeugger\r\n        if (status) {\r\n          dispatch(loginSuccess(response.data.data))\r\n          router.push('/')\r\n        } else {\r\n          dispatch(loginFailure(message))\r\n        }\r\n      })\r\n      .catch(error => {\r\n        dispatch(loginFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const loginActionRequest = () => {\r\n  return {\r\n    type: LOGIN_REQUEST\r\n  }\r\n}\r\n\r\nexport const loginSuccess = dataUser => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: dataUser\r\n  }\r\n}\r\nexport const loginFailure = error => {\r\n  return {\r\n    type: LOGIN_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n// ENTER LOGIN PAGE\r\nexport const enterPage = () => {\r\n  return {\r\n    type: ENTER_PAGE\r\n  }\r\n}\r\n\r\nexport const registerAction = (form) => {\r\n  return axios.post(`/api/auth/signup`, form)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      return {\r\n        status: false,\r\n        message: error.message\r\n      }\r\n    })\r\n}\r\n\r\nexport const forgotAction1 = form => {\r\n  return axios.post(`/api/auth/forgot_p1`, form)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      return {\r\n        status: false,\r\n        message: error.message\r\n      }\r\n    })\r\n}\r\n\r\nexport const forgotAction2 = form => {\r\n  return axios.post(`/api/auth/forgot_p2`, form)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      return {\r\n        status: false,\r\n        message: error.message\r\n      }\r\n    })\r\n}\r\n\r\nexport const forgotAction3 = form => {\r\n  return axios.post(`/api/auth/forgot_p3`, form)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n    .catch(error => {\r\n      return {\r\n        status: false,\r\n        message: error.message\r\n      }\r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}