{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst cartHookCustom = () => {\n  const router = useRouter();\n  const [fabricList, setFabricList] = useState([]);\n  const [fabricSelect, setFabricSelect] = useState(null);\n  const [listStyle, setListStyle] = useState([]);\n  const [openStyle, setOpenStyle] = useState(false);\n  const [styleSelect, setStyleSelect] = useState(null);\n  const [dataStyle, setDataStyle] = useState(initStyle);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingFabric, setIsLoadingFabric] = useState(false);\n  const {\n    category\n  } = router.query;\n  useEffect(() => {\n    cx();\n  }, []);\n  useEffect(async () => {\n    try {\n      var response = await axios.get(\"/api/fabric/list\");\n      const {\n        status,\n        message\n      } = response.data;\n\n      if (status) {\n        const {\n          data\n        } = response.data;\n        setFabricList(data);\n      } else {\n        setFabricList([]);\n      }\n    } catch (e) {\n      setFabricList([]);\n    }\n  }, []);\n  useEffect(async () => {\n    console.log(\"fabricSelect\");\n    setIsLoadingFabric(true);\n    getCustomStyle();\n  }, [fabricSelect]);\n  useEffect(() => {\n    setIsLoading(true);\n    console.log(styleSelect);\n\n    const newDataStyle = _objectSpread({}, dataStyle);\n\n    switch (styleSelect === null || styleSelect === void 0 ? void 0 : styleSelect.title) {\n      case \"Collar\":\n        newDataStyle.collar.name = styleSelect.name;\n        break;\n\n      case \"Sleeve\":\n        newDataStyle.sleeve.name = styleSelect.name;\n        break;\n\n      case \"Bottom\":\n        newDataStyle.bottom.name = styleSelect.name;\n        break;\n\n      case \"Chest Pocket\":\n        newDataStyle.pocket.name = styleSelect.name;\n        break;\n\n      case \"Cuffs\":\n        newDataStyle.cuffs.name = styleSelect.name;\n        newDataStyle.sleeve.name = \"Long\";\n        break;\n\n      default:\n        break;\n    }\n\n    getCustomStyle();\n  }, [styleSelect]);\n  useEffect(() => {\n    switch (category) {\n      case 'vests':\n        setListStyle(VestListStyle);\n        break;\n\n      case 'batiks':\n        setListStyle(BatikListStyle);\n        break;\n\n      case 'shirts':\n        setListStyle(ShirtListStyle);\n        break;\n\n      case 'trousers':\n        setListStyle(TrouserListStyle);\n        break;\n\n      case 'blazer':\n        setListStyle(BlazerListStyle);\n        break;\n    }\n  }, [category]);\n\n  const getCustomStyle = async () => {\n    try {\n      var response = await axios.get(`/api/custom/custom_style?fabric=${fabricSelect._id}&collar=${dataStyle.collar.name}&cuff=${dataStyle.cuffs.name}&sleeve=${dataStyle.sleeve.name}&bottom=${dataStyle.bottom.name}&chestpocket=${dataStyle.pocket.name}`);\n      const {\n        status,\n        data\n      } = response.data;\n\n      const newDataStyle = _objectSpread({}, dataStyle);\n\n      newDataStyle.bottom.name = data.bottom.name;\n      newDataStyle.bottom.image = data.bottom.image;\n      newDataStyle.collar.name = data.collar.name;\n      newDataStyle.collar.image = data.collar.image;\n      newDataStyle.sleeve.name = data.sleeve.name;\n      newDataStyle.sleeve.image = data.sleeve.image;\n      newDataStyle.pocket.name = data.chestpocket.name;\n      newDataStyle.pocket.image = data.chestpocket.image;\n      setDataStyle(newDataStyle);\n    } catch (e) {\n      console.log(e);\n    } finally {\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 700);\n      setTimeout(() => {\n        setIsLoadingFabric(false);\n      }, 1000);\n    }\n  };\n\n  return {\n    openStyle,\n    listStyle,\n    fabricList,\n    styleSelect,\n    fabricSelect,\n    dataStyle,\n    isLoading,\n    isLoadingFabric,\n    setDataStyle,\n    setIsLoading,\n    setOpenStyle,\n    setFabricList,\n    setStyleSelect,\n    setFabricSelect,\n    setIsLoadingFabric\n  };\n};\n\nexport default cartHookCustom;","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/cart/cartHookCustom.js"],"names":["cartHookCustom","router","useRouter","fabricList","setFabricList","useState","fabricSelect","setFabricSelect","listStyle","setListStyle","openStyle","setOpenStyle","styleSelect","setStyleSelect","dataStyle","setDataStyle","initStyle","isLoading","setIsLoading","isLoadingFabric","setIsLoadingFabric","category","query","useEffect","cx","response","axios","get","status","message","data","e","console","log","getCustomStyle","newDataStyle","title","collar","name","sleeve","bottom","pocket","cuffs","VestListStyle","BatikListStyle","ShirtListStyle","TrouserListStyle","BlazerListStyle","_id","image","chestpocket","setTimeout"],"mappings":"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","sourcesContent":["const cartHookCustom = () => {\r\n    const router = useRouter()\r\n    const [fabricList, setFabricList] = useState([])\r\n    const [fabricSelect, setFabricSelect] = useState(null)\r\n    const [listStyle, setListStyle] = useState([])\r\n    const [openStyle, setOpenStyle] = useState(false)\r\n    const [styleSelect, setStyleSelect] = useState(null)\r\n    const [dataStyle, setDataStyle] = useState(initStyle)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingFabric, setIsLoadingFabric] = useState(false)\r\n    const { category } = router.query\r\n\r\n    useEffect(() => {\r\n        cx()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            var response = await axios.get(\"/api/fabric/list\");\r\n            const { status, message } = response.data\r\n            if (status) {\r\n                const { data } = response.data\r\n                setFabricList(data)\r\n            } else {\r\n                setFabricList([])\r\n            }\r\n        } catch (e) {\r\n            setFabricList([])\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        console.log(\"fabricSelect\");\r\n        setIsLoadingFabric(true)\r\n        getCustomStyle()\r\n    }, [fabricSelect])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        console.log(styleSelect);\r\n        const newDataStyle = { ...dataStyle }\r\n        switch (styleSelect?.title) {\r\n            case \"Collar\":\r\n                newDataStyle.collar.name = styleSelect.name\r\n                break;\r\n            case \"Sleeve\":\r\n                newDataStyle.sleeve.name = styleSelect.name\r\n                break;\r\n            case \"Bottom\":\r\n                newDataStyle.bottom.name = styleSelect.name\r\n                break;\r\n            case \"Chest Pocket\":\r\n                newDataStyle.pocket.name = styleSelect.name\r\n                break;\r\n            case \"Cuffs\":\r\n                newDataStyle.cuffs.name = styleSelect.name\r\n                newDataStyle.sleeve.name = \"Long\"\r\n                break;\r\n            default: break;\r\n        }\r\n        getCustomStyle()\r\n    }, [styleSelect])\r\n\r\n    useEffect(() => {\r\n        switch (category) {\r\n            case 'vests':\r\n                setListStyle(VestListStyle)\r\n                break;\r\n            case 'batiks':\r\n                setListStyle(BatikListStyle)\r\n                break;\r\n            case 'shirts':\r\n                setListStyle(ShirtListStyle)\r\n                break;\r\n            case 'trousers':\r\n                setListStyle(TrouserListStyle)\r\n                break;\r\n            case 'blazer':\r\n                setListStyle(BlazerListStyle)\r\n                break;\r\n        }\r\n    }, [category]);\r\n\r\n    const getCustomStyle = async () => {\r\n        try {\r\n            var response = await axios.get(`/api/custom/custom_style?fabric=${fabricSelect._id}&collar=${dataStyle.collar.name}&cuff=${dataStyle.cuffs.name}&sleeve=${dataStyle.sleeve.name}&bottom=${dataStyle.bottom.name}&chestpocket=${dataStyle.pocket.name}`);\r\n            const { status, data } = response.data\r\n            const newDataStyle = { ...dataStyle }\r\n            newDataStyle.bottom.name = data.bottom.name\r\n            newDataStyle.bottom.image = data.bottom.image\r\n            newDataStyle.collar.name = data.collar.name\r\n            newDataStyle.collar.image = data.collar.image\r\n            newDataStyle.sleeve.name = data.sleeve.name\r\n            newDataStyle.sleeve.image = data.sleeve.image\r\n            newDataStyle.pocket.name = data.chestpocket.name\r\n            newDataStyle.pocket.image = data.chestpocket.image\r\n            setDataStyle(newDataStyle)\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            setTimeout(() => {\r\n                setIsLoading(false)\r\n            }, 700);\r\n            setTimeout(() => {\r\n                setIsLoadingFabric(false)\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    return {\r\n        openStyle,\r\n        listStyle,\r\n        fabricList,\r\n        styleSelect,\r\n        fabricSelect,\r\n        dataStyle,\r\n        isLoading,\r\n        isLoadingFabric,\r\n        setDataStyle,\r\n        setIsLoading,\r\n        setOpenStyle,\r\n        setFabricList,\r\n        setStyleSelect,\r\n        setFabricSelect,\r\n        setIsLoadingFabric,\r\n    }\r\n}\r\nexport default cartHookCustom"]},"metadata":{},"sourceType":"module"}