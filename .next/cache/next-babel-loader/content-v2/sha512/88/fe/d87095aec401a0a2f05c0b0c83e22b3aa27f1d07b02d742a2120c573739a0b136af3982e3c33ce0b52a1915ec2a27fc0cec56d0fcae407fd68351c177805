{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\"; // import frenchPlacket from \"../../../public/img/placket/Placket French.svg\";\n\nimport { useRouter } from \"next/router\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport { BlazerListStyle, ShirtListStyle, TrouserListStyle, VestListStyle, BatikListStyle } from './sidebar/dataSidebar';\nconst initStyle = {\n  \"bottom\": {\n    \"image\": \"\",\n    \"name\": \"Square\"\n  },\n  \"collar\": {\n    \"image\": \"\",\n    \"name\": \"Stand Up\"\n  },\n  \"collarBack\": {\n    \"image\": \"/img/pleats/red/Collar Back.svg\",\n    \"name\": \"Stand Up\"\n  },\n  \"sleeve\": {\n    \"image\": \"\",\n    \"name\": \"Short\"\n  },\n  \"cuffs\": {\n    \"image\": \"\",\n    \"name\": \"Square French\"\n  },\n  \"cuffsBack\": {\n    \"image\": \"/img/sleeve_back/Cuffs Double Rounded French Back.svg\",\n    \"name\": \"Square French\"\n  },\n  \"pocket\": {\n    \"image\": \"\",\n    \"name\": \"With Flap\"\n  },\n  \"placket\": {\n    \"image\": \"\",\n    \"name\": \"Standard Body Untucked With Square\"\n  },\n  \"pleats\": {\n    \"image\": \"/img/pleats/red/Pleats Box Tucked.svg\",\n    \"name\": \"Pleats\"\n  },\n  \"collarFold\": {\n    \"image\": \"\"\n  },\n  \"cuffsFold\": {\n    \"image\": \"\"\n  },\n  \"pocketFold\": {\n    \"image\": \"\" // \"image\":\"/img/pleats/red/Chest Pocket Folded.svg\"\n\n  },\n  \"placketFold\": {\n    \"image\": \"/img/folded/red/pleats/Placket Standard Body Folded.svg\"\n  }\n};\nconst fabricSelectRef = useRef(fabricSelect);\n\nconst useHookCustom = () => {\n  const router = useRouter();\n  const {\n    0: fabricList,\n    1: setFabricList\n  } = useState([]);\n  const {\n    0: fabricSelect,\n    1: setFabricSelect\n  } = useState(null);\n  const {\n    0: listStyle,\n    1: setListStyle\n  } = useState([]);\n  const {\n    0: openStyle,\n    1: setOpenStyle\n  } = useState(false);\n  const {\n    0: styleSelect,\n    1: setStyleSelect\n  } = useState(null);\n  const {\n    0: dataStyle,\n    1: setDataStyle\n  } = useState(initStyle);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: isLoadingFabric,\n    1: setIsLoadingFabric\n  } = useState(false);\n  const {\n    category\n  } = router.query;\n  const {\n    0: pov,\n    1: setPov\n  } = useState(\"FRONT\");\n  const povRef = useRef(pov);\n  useEffect(() => {\n    povRef.current = pov;\n  }, [pov]);\n\n  const updatePov = newPov => {\n    setPov(newPov);\n    console.log(newPov);\n  };\n\n  useEffect(() => {\n    getCustomStyle();\n  }, []);\n  useEffect(async () => {\n    try {\n      var response = await axios.get(\"/api/fabric/list\");\n      const {\n        status,\n        message\n      } = response.data;\n\n      if (status) {\n        const {\n          data\n        } = response.data;\n        setFabricList(data);\n      } else {\n        setFabricList([]);\n      }\n    } catch (e) {\n      setFabricList([]);\n    }\n  }, []);\n  useEffect(async () => {\n    setIsLoadingFabric(true);\n    getCustomStyle();\n  }, [fabricSelect]);\n  useEffect(async () => {\n    setIsLoadingFabric(true);\n    getCustomStyle();\n  }, [pov]);\n  useEffect(() => {\n    console.log(\"DataStyle:\", dataStyle);\n  }, [dataStyle]);\n  useEffect(() => {\n    setIsLoading(true);\n    console.log(styleSelect);\n\n    const newDataStyle = _objectSpread({}, dataStyle);\n\n    switch (styleSelect === null || styleSelect === void 0 ? void 0 : styleSelect.title) {\n      case \"Collar\":\n        newDataStyle.collar.name = styleSelect.name;\n        break;\n\n      case \"Sleeve\":\n        newDataStyle.sleeve.name = styleSelect.name;\n        break;\n\n      case \"Bottom\":\n        newDataStyle.bottom.name = styleSelect.name;\n        break;\n\n      case \"Chest Pocket\":\n        newDataStyle.pocket.name = styleSelect.name;\n        break;\n\n      case \"Cuffs\":\n        newDataStyle.cuffs.name = styleSelect.name;\n        newDataStyle.cuffsBack.name = styleSelect.name;\n        newDataStyle.sleeve.name = \"Long\";\n        break;\n\n      case \"Placket\":\n        newDataStyle.placket.name = styleSelect.name;\n      // case \"Pleats\":\n      //     newDataStyle.pleats.name = styleSelect.name\n\n      default:\n        break;\n    }\n\n    getCustomStyle();\n  }, [styleSelect]);\n  useEffect(() => {\n    switch (category) {\n      case 'vests':\n        setListStyle(VestListStyle);\n        break;\n\n      case 'batiks':\n        setListStyle(BatikListStyle);\n        break;\n\n      case 'shirts':\n        setListStyle(ShirtListStyle);\n        break;\n\n      case 'trousers':\n        setListStyle(TrouserListStyle);\n        break;\n\n      case 'blazer':\n        setListStyle(BlazerListStyle);\n        break;\n    }\n  }, [category]);\n\n  const getCustomStyle = async () => {\n    console.log(\"Getting custom style for POV:\", povRef.current);\n    setIsLoading(true);\n    setIsLoadingFabric(true);\n\n    try {\n      if (!fabricSelectRef.current || !fabricSelectRef.current._id) {\n        console.error(\"No fabric selected or fabric ID is missing\");\n        return;\n      }\n\n      let url = new URL('/api/custom/custom_style', window.location.origin);\n      let params = new URLSearchParams({\n        fabric: fabricSelectRef.current._id,\n        collar: dataStyleRef.current.collar.name,\n        cuffs: dataStyleRef.current.cuffs.name,\n        sleeve: dataStyleRef.current.sleeve.name,\n        bottom: dataStyleRef.current.bottom.name,\n        chestpocket: dataStyleRef.current.pocket.name,\n        placket: dataStyleRef.current.placket.name,\n        pov: povRef.current\n      });\n      url.search = params.toString();\n      console.log(\"Request URL:\", url.toString());\n      const response = await axios.get(url.toString());\n      console.log(\"API Response:\", response.data);\n      const {\n        status,\n        data\n      } = response.data;\n\n      if (status) {\n        setDataStyle(prevState => {\n          var _data$styles$collar, _data$styles$collar2, _data$styles$sleeve, _data$styles$sleeve2, _data$styles$chestpoc, _data$styles$chestpoc2, _data$styles$placket, _data$styles$placket2;\n\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            collar: {\n              name: ((_data$styles$collar = data.styles.collar) === null || _data$styles$collar === void 0 ? void 0 : _data$styles$collar.name) || prevState.collar.name,\n              image: ((_data$styles$collar2 = data.styles.collar) === null || _data$styles$collar2 === void 0 ? void 0 : _data$styles$collar2.image) || prevState.collar.image\n            },\n            sleeve: {\n              name: ((_data$styles$sleeve = data.styles.sleeve) === null || _data$styles$sleeve === void 0 ? void 0 : _data$styles$sleeve.name) || prevState.sleeve.name,\n              image: ((_data$styles$sleeve2 = data.styles.sleeve) === null || _data$styles$sleeve2 === void 0 ? void 0 : _data$styles$sleeve2.image) || prevState.sleeve.image\n            },\n            pocket: {\n              name: ((_data$styles$chestpoc = data.styles.chestpocket) === null || _data$styles$chestpoc === void 0 ? void 0 : _data$styles$chestpoc.name) || prevState.pocket.name,\n              image: ((_data$styles$chestpoc2 = data.styles.chestpocket) === null || _data$styles$chestpoc2 === void 0 ? void 0 : _data$styles$chestpoc2.image) || prevState.pocket.image\n            },\n            placket: {\n              name: ((_data$styles$placket = data.styles.placket) === null || _data$styles$placket === void 0 ? void 0 : _data$styles$placket.name) || prevState.placket.name,\n              image: ((_data$styles$placket2 = data.styles.placket) === null || _data$styles$placket2 === void 0 ? void 0 : _data$styles$placket2.image) || prevState.placket.image\n            } // Add other style properties as needed\n\n          });\n        });\n      } else {\n        console.error(\"API returned error status\");\n      }\n    } catch (e) {\n      console.error(\"Error in getCustomStyle:\", e);\n    } finally {\n      setIsLoading(false);\n      setIsLoadingFabric(false);\n    }\n  }; // const getCustomStyle = async () => {\n  //     console.log(fabricSelect);\n  //     try {\n  //         let placketName = \"\",\n  //         isTucked = false;\n  //         if(dataStyle.placket.name.split(\" \").length > 1){ //* Check apakah isi nya \"Standar\" atau sudah lengkap dengan \"Body Untucked With Square\"\n  //             placketName = dataStyle.placket.name;\n  //         }else {\n  //             placketName = dataStyle.placket.name.concat(\" Body\", isTucked ? \"\" : \"Untucked\" ,\"With Square\")\n  //         }\n  //         var url = `/api/custom/custom_style?fabric=${fabricSelect._id}&collar=${dataStyle.collar.name}&cuffs=${dataStyle.cuffs.name}&sleeve=${dataStyle.sleeve.name}&bottom=${dataStyle.bottom.name}&chestpocket=${dataStyle.pocket.name}&placket=${dataStyle.placket.name}&pov=${pov}`;\n  //         var response = await axios.get(url);\n  //         console.log(url)\n  //         const { status, data } = response.data\n  //         console.log(data)\n  //         const newDataStyle = { ...dataStyle }\n  //         // newDataStyle.bottom.name = data.bottom.name\n  //         // newDataStyle.bottom.image = data.bottom.image\n  //         newDataStyle.collar.name = data.styles.collar?.name || \"\"\n  //         newDataStyle.collar.image = data.styles.collar?.image || \"\"\n  //         newDataStyle.sleeve.name = data.styles.sleeve?.name || \"\"\n  //         newDataStyle.sleeve.image = data.styles.sleeve?.image || \"\"\n  //         newDataStyle.pocket.name = data.styles.chestpocket?.name || \"\"\n  //         newDataStyle.pocket.image = data.styles.chestpocket?.image || \"\"\n  //         newDataStyle.placket.name = data.styles.placket?.name || \"\"\n  //         newDataStyle.placket.image = data.styles.placket?.image || \"\"\n  //         console.log(fabricSelect._id)\n  //         setDataStyle(newDataStyle)\n  //         console.log(newDataStyle)\n  //     } catch (e) {\n  //         console.log(e);\n  //     } finally {\n  //         setTimeout(() => {\n  //             setIsLoading(false)\n  //         }, 700);\n  //         setTimeout(() => {\n  //             setIsLoadingFabric(false)\n  //         }, 1000);\n  //     }\n  // }\n\n\n  return {\n    openStyle,\n    listStyle,\n    fabricList,\n    styleSelect,\n    fabricSelect,\n    dataStyle,\n    isLoading,\n    isLoadingFabric,\n    pov,\n    updatePov,\n    setPov,\n    setDataStyle,\n    setIsLoading,\n    setOpenStyle,\n    setFabricList,\n    setStyleSelect,\n    setFabricSelect,\n    setIsLoadingFabric\n  };\n};\n\nexport default useHookCustom;","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/custom/hookCustom.js"],"names":["axios","useRouter","useCallback","useEffect","useState","useRef","BlazerListStyle","ShirtListStyle","TrouserListStyle","VestListStyle","BatikListStyle","initStyle","fabricSelectRef","fabricSelect","useHookCustom","router","fabricList","setFabricList","setFabricSelect","listStyle","setListStyle","openStyle","setOpenStyle","styleSelect","setStyleSelect","dataStyle","setDataStyle","isLoading","setIsLoading","isLoadingFabric","setIsLoadingFabric","category","query","pov","setPov","povRef","current","updatePov","newPov","console","log","getCustomStyle","response","get","status","message","data","e","newDataStyle","title","collar","name","sleeve","bottom","pocket","cuffs","cuffsBack","placket","_id","error","url","URL","window","location","origin","params","URLSearchParams","fabric","dataStyleRef","chestpocket","search","toString","prevState","styles","image"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n// import frenchPlacket from \"../../../public/img/placket/Placket French.svg\";\r\n\r\nimport { useRouter } from \"next/router\";\r\nimport { useCallback, useEffect, useState, useRef } from \"react\"\r\nimport {\r\n    BlazerListStyle,\r\n    ShirtListStyle,\r\n    TrouserListStyle,\r\n    VestListStyle,\r\n    BatikListStyle\r\n} from './sidebar/dataSidebar'\r\n\r\nconst initStyle = {\r\n    \"bottom\": {\r\n        \"image\": \"\",\r\n        \"name\": \"Square\"\r\n    },\r\n    \"collar\": {\r\n        \"image\": \"\",\r\n        \"name\": \"Stand Up\"\r\n    },\r\n    \"collarBack\": {\r\n        \"image\": \"/img/pleats/red/Collar Back.svg\",\r\n        \"name\": \"Stand Up\"\r\n    },\r\n    \"sleeve\": {\r\n        \"image\": \"\",\r\n        \"name\": \"Short\"\r\n    },\r\n    \"cuffs\": {\r\n        \"image\": \"\",\r\n        \"name\": \"Square French\"\r\n    },\r\n    \"cuffsBack\": {\r\n        \"image\": \"/img/sleeve_back/Cuffs Double Rounded French Back.svg\",\r\n        \"name\": \"Square French\"\r\n    },\r\n    \"pocket\": {\r\n        \"image\": \"\",\r\n        \"name\": \"With Flap\"\r\n    },\r\n    \"placket\": {\r\n        \"image\": \"\",\r\n        \"name\": \"Standard Body Untucked With Square\"\r\n    },\r\n    \"pleats\": {\r\n        \"image\": \"/img/pleats/red/Pleats Box Tucked.svg\",\r\n        \"name\": \"Pleats\"\r\n    },\r\n    \"collarFold\":{\r\n        \"image\":\"\"\r\n    },\r\n    \"cuffsFold\":{\r\n        \"image\":\"\"\r\n    },\r\n    \"pocketFold\":{\r\n        \"image\":\"\"\r\n        // \"image\":\"/img/pleats/red/Chest Pocket Folded.svg\"\r\n    },\r\n    \"placketFold\":{\r\n        \"image\":\"/img/folded/red/pleats/Placket Standard Body Folded.svg\"\r\n    }\r\n}\r\nconst fabricSelectRef = useRef(fabricSelect);\r\n\r\nconst useHookCustom = () => {\r\n    const router = useRouter()\r\n    const [fabricList, setFabricList] = useState([])\r\n    const [fabricSelect, setFabricSelect] = useState(null)\r\n    const [listStyle, setListStyle] = useState([])\r\n    const [openStyle, setOpenStyle] = useState(false)\r\n    const [styleSelect, setStyleSelect] = useState(null)\r\n    const [dataStyle, setDataStyle] = useState(initStyle)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingFabric, setIsLoadingFabric] = useState(false)\r\n    const { category } = router.query\r\n    const [pov, setPov] = useState(\"FRONT\")\r\n\r\n    const povRef = useRef(pov);\r\n\r\n    useEffect(() => {\r\n        povRef.current = pov;\r\n      }, [pov]);\r\n\r\n    const updatePov = (newPov) => {\r\n        setPov(newPov);\r\n        console.log(newPov);\r\n      };\r\n\r\n    useEffect(() => {\r\n        getCustomStyle()\r\n    }, [])\r\n\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            var response = await axios.get(\"/api/fabric/list\");\r\n            const { status, message } = response.data\r\n            if (status) {\r\n                const { data } = response.data\r\n                setFabricList(data)\r\n            } else {\r\n                setFabricList([])\r\n            }\r\n        } catch (e) {\r\n            setFabricList([])\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        setIsLoadingFabric(true)\r\n        getCustomStyle()\r\n    }, [fabricSelect]);\r\n\r\n    useEffect(async () => {\r\n        setIsLoadingFabric(true)\r\n        getCustomStyle()\r\n    }, [pov]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"DataStyle:\", dataStyle)\r\n    },[dataStyle])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        console.log(styleSelect);\r\n        const newDataStyle = { ...dataStyle }\r\n        switch (styleSelect?.title) {\r\n            case \"Collar\":\r\n                newDataStyle.collar.name = styleSelect.name\r\n                break;\r\n            case \"Sleeve\":\r\n                newDataStyle.sleeve.name = styleSelect.name\r\n                break;\r\n            case \"Bottom\":\r\n                newDataStyle.bottom.name = styleSelect.name\r\n                break;\r\n            case \"Chest Pocket\":\r\n                newDataStyle.pocket.name = styleSelect.name\r\n                break;\r\n            case \"Cuffs\":\r\n                newDataStyle.cuffs.name = styleSelect.name\r\n                newDataStyle.cuffsBack.name = styleSelect.name\r\n                newDataStyle.sleeve.name = \"Long\"\r\n                break;\r\n            case \"Placket\":\r\n                newDataStyle.placket.name = styleSelect.name\r\n            // case \"Pleats\":\r\n            //     newDataStyle.pleats.name = styleSelect.name\r\n            default: break;\r\n        }\r\n        getCustomStyle()\r\n    }, [styleSelect])\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        switch (category) {\r\n            case 'vests':\r\n                setListStyle(VestListStyle)\r\n                break;\r\n            case 'batiks':\r\n                setListStyle(BatikListStyle)\r\n                break;\r\n            case 'shirts':\r\n                setListStyle(ShirtListStyle)\r\n                break;\r\n            case 'trousers':\r\n                setListStyle(TrouserListStyle)\r\n                break;\r\n            case 'blazer':\r\n                setListStyle(BlazerListStyle)\r\n                break;\r\n        }\r\n    }, [category]);\r\n\r\n    const getCustomStyle = async () => {\r\n        console.log(\"Getting custom style for POV:\", povRef.current);\r\n        setIsLoading(true);\r\n        setIsLoadingFabric(true);\r\n    \r\n        try {\r\n          if (!fabricSelectRef.current || !fabricSelectRef.current._id) {\r\n            console.error(\"No fabric selected or fabric ID is missing\");\r\n            return;\r\n          }\r\n    \r\n          let url = new URL('/api/custom/custom_style', window.location.origin);\r\n          let params = new URLSearchParams({\r\n            fabric: fabricSelectRef.current._id,\r\n            collar: dataStyleRef.current.collar.name,\r\n            cuffs: dataStyleRef.current.cuffs.name,\r\n            sleeve: dataStyleRef.current.sleeve.name,\r\n            bottom: dataStyleRef.current.bottom.name,\r\n            chestpocket: dataStyleRef.current.pocket.name,\r\n            placket: dataStyleRef.current.placket.name,\r\n            pov: povRef.current\r\n          });\r\n    \r\n          url.search = params.toString();\r\n    \r\n          console.log(\"Request URL:\", url.toString());\r\n    \r\n          const response = await axios.get(url.toString());\r\n          console.log(\"API Response:\", response.data);\r\n    \r\n          const { status, data } = response.data;\r\n          if (status) {\r\n            setDataStyle(prevState => ({\r\n              ...prevState,\r\n              collar: { \r\n                name: data.styles.collar?.name || prevState.collar.name, \r\n                image: data.styles.collar?.image || prevState.collar.image \r\n              },\r\n              sleeve: { \r\n                name: data.styles.sleeve?.name || prevState.sleeve.name, \r\n                image: data.styles.sleeve?.image || prevState.sleeve.image \r\n              },\r\n              pocket: { \r\n                name: data.styles.chestpocket?.name || prevState.pocket.name, \r\n                image: data.styles.chestpocket?.image || prevState.pocket.image \r\n              },\r\n              placket: { \r\n                name: data.styles.placket?.name || prevState.placket.name, \r\n                image: data.styles.placket?.image || prevState.placket.image \r\n              },\r\n              // Add other style properties as needed\r\n            }));\r\n          } else {\r\n            console.error(\"API returned error status\");\r\n          }\r\n        } catch (e) {\r\n          console.error(\"Error in getCustomStyle:\", e);\r\n        } finally {\r\n          setIsLoading(false);\r\n          setIsLoadingFabric(false);\r\n        }\r\n      };\r\n\r\n    // const getCustomStyle = async () => {\r\n    //     console.log(fabricSelect);\r\n        \r\n    //     try {\r\n    //         let placketName = \"\",\r\n    //         isTucked = false;\r\n    //         if(dataStyle.placket.name.split(\" \").length > 1){ //* Check apakah isi nya \"Standar\" atau sudah lengkap dengan \"Body Untucked With Square\"\r\n    //             placketName = dataStyle.placket.name;\r\n    //         }else {\r\n    //             placketName = dataStyle.placket.name.concat(\" Body\", isTucked ? \"\" : \"Untucked\" ,\"With Square\")\r\n    //         }\r\n        \r\n            \r\n    //         var url = `/api/custom/custom_style?fabric=${fabricSelect._id}&collar=${dataStyle.collar.name}&cuffs=${dataStyle.cuffs.name}&sleeve=${dataStyle.sleeve.name}&bottom=${dataStyle.bottom.name}&chestpocket=${dataStyle.pocket.name}&placket=${dataStyle.placket.name}&pov=${pov}`;\r\n    //         var response = await axios.get(url);\r\n    //         console.log(url)\r\n    //         const { status, data } = response.data\r\n    //         console.log(data)\r\n    //         const newDataStyle = { ...dataStyle }\r\n    //         // newDataStyle.bottom.name = data.bottom.name\r\n    //         // newDataStyle.bottom.image = data.bottom.image\r\n            \r\n    //         newDataStyle.collar.name = data.styles.collar?.name || \"\"\r\n    //         newDataStyle.collar.image = data.styles.collar?.image || \"\"\r\n    //         newDataStyle.sleeve.name = data.styles.sleeve?.name || \"\"\r\n    //         newDataStyle.sleeve.image = data.styles.sleeve?.image || \"\"\r\n    //         newDataStyle.pocket.name = data.styles.chestpocket?.name || \"\"\r\n    //         newDataStyle.pocket.image = data.styles.chestpocket?.image || \"\"\r\n    //         newDataStyle.placket.name = data.styles.placket?.name || \"\"\r\n    //         newDataStyle.placket.image = data.styles.placket?.image || \"\"\r\n            \r\n    //         console.log(fabricSelect._id)\r\n    //         setDataStyle(newDataStyle)\r\n    //         console.log(newDataStyle)\r\n    //     } catch (e) {\r\n    //         console.log(e);\r\n    //     } finally {\r\n    //         setTimeout(() => {\r\n    //             setIsLoading(false)\r\n    //         }, 700);\r\n    //         setTimeout(() => {\r\n    //             setIsLoadingFabric(false)\r\n    //         }, 1000);\r\n    //     }\r\n    // }\r\n\r\n    return {\r\n        openStyle,\r\n        listStyle,\r\n        fabricList,\r\n        styleSelect,\r\n        fabricSelect,\r\n        dataStyle,\r\n        isLoading,\r\n        isLoadingFabric,\r\n        pov,\r\n        updatePov,\r\n        setPov,\r\n        setDataStyle,\r\n        setIsLoading,\r\n        setOpenStyle,\r\n        setFabricList,\r\n        setStyleSelect,\r\n        setFabricSelect,\r\n        setIsLoadingFabric,\r\n    }\r\n}\r\nexport default useHookCustom"]},"metadata":{},"sourceType":"module"}