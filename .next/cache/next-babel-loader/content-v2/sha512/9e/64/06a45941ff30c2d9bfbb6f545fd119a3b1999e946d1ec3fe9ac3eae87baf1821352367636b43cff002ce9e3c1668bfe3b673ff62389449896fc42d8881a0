{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\luarKampus\\\\Magang\\\\Bestada\\\\laxmi.front.web.user\\\\components\\\\partials\\\\cart\\\\module\\\\accordion.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Image from 'next/image';\nimport Link from 'next/link'; // Assuming your other imports are correct and necessary components/icons are available\n\nimport { Trash, MinButton, PlusButton } from '../../../elements/icon';\nimport Heading from '../../../elements/heading';\nimport NumberFormat from '../../../../helpers/numberFormat';\n\nconst Accordion = ({\n  t\n}) => {\n  const {\n    0: dataCart,\n    1: setDataCart\n  } = useState(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const getCart = async () => {\n    try {\n      const response = await axios.get(`/api/cart/cart`);\n\n      if (response.status === 200) {\n        setDataCart(response.data.data); // Make sure you are setting the correct part of the response\n\n        setIsLoading(false);\n      } else {\n        console.log(\"Error in fetching data, status code:\", response.status);\n        setError('Failed to fetch data');\n        setIsLoading(false);\n      }\n    } catch (e) {\n      console.error('Error details:', e.response ? e.response.data : e.message);\n      setError(e.response ? e.response.data : e.message);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getCart();\n  }, []);\n\n  const handleQuantity = type => {\n    alert(type);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion\",\n    children: dataCart && dataCart.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion-item\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Accordion;","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/cart/module/accordion.jsx"],"names":["React","useState","useEffect","axios","Image","Link","Trash","MinButton","PlusButton","Heading","NumberFormat","Accordion","t","dataCart","setDataCart","isLoading","setIsLoading","error","setError","getCart","response","get","status","data","console","log","e","message","handleQuantity","type","alert","map","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,wBAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAW;AACzB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bb,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACc,SAAD;AAAA,OAAYC;AAAZ,MAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACgB,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMkB,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,gBAAX,CAAvB;;AACA,UAAID,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AACzBR,QAAAA,WAAW,CAACM,QAAQ,CAACG,IAAT,CAAcA,IAAf,CAAX,CADyB,CACQ;;AACjCP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAHD,MAGO;AACHQ,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDL,QAAQ,CAACE,MAA7D;AACAJ,QAAAA,QAAQ,CAAC,sBAAD,CAAR;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,KAVD,CAUE,OAAOU,CAAP,EAAU;AACRF,MAAAA,OAAO,CAACP,KAAR,CAAc,gBAAd,EAAgCS,CAAC,CAACN,QAAF,GAAaM,CAAC,CAACN,QAAF,CAAWG,IAAxB,GAA+BG,CAAC,CAACC,OAAjE;AACAT,MAAAA,QAAQ,CAACQ,CAAC,CAACN,QAAF,GAAaM,CAAC,CAACN,QAAF,CAAWG,IAAxB,GAA+BG,CAAC,CAACC,OAAlC,CAAR;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAhBD;;AAkBAd,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,cAAc,GAAGC,IAAI,IAAI;AAC3BC,IAAAA,KAAK,CAACD,IAAD,CAAL;AACH,GAFD;;AAIA,MAAId,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAIE,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKJ,QAAQ,IAAIA,QAAQ,CAACkB,GAAT,CAAa,CAACR,IAAD,EAAOS,KAAP,kBACtB;AAAK,MAAA,SAAS,EAAC;AAAf,OAAqCA,KAArC;AAAA;AAAA;AAAA;AAAA,YADS;AADjB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAhDD;;AAkDA,eAAerB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Image from 'next/image';\r\nimport Link from 'next/link';\r\n\r\n// Assuming your other imports are correct and necessary components/icons are available\r\nimport { Trash, MinButton, PlusButton } from '../../../elements/icon';\r\nimport Heading from '../../../elements/heading';\r\nimport NumberFormat from '../../../../helpers/numberFormat';\r\n\r\nconst Accordion = ({ t }) => {\r\n    const [dataCart, setDataCart] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const getCart = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/cart/cart`);\r\n            if (response.status === 200) {\r\n                setDataCart(response.data.data); // Make sure you are setting the correct part of the response\r\n                setIsLoading(false);\r\n            } else {\r\n                console.log(\"Error in fetching data, status code:\", response.status);\r\n                setError('Failed to fetch data');\r\n                setIsLoading(false);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error details:', e.response ? e.response.data : e.message);\r\n            setError(e.response ? e.response.data : e.message);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCart();\r\n    }, []);\r\n\r\n    const handleQuantity = type => {\r\n        alert(type);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\">\r\n            {dataCart && dataCart.map((data, index) => (\r\n                <div className=\"accordion-item\" key={index}>\r\n                    {/* Your existing JSX for rendering each item */}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accordion;\r\n"]},"metadata":{},"sourceType":"module"}