{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/luarKampus/Magang/Bestada/laxmi.front.web.user/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/luarKampus/Magang/Bestada/laxmi.front.web.user/node_modules/.pnpm/@babel+runtime@7.12.5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\luarKampus\\\\Magang\\\\Bestada\\\\laxmi.front.web.user\\\\components\\\\partials\\\\cart\\\\module\\\\accordion.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Image from 'next/image';\nimport Link from 'next/link'; // Assuming your other imports are correct and necessary components/icons are available\n\nimport { Trash, MinButton, PlusButton } from '../../../elements/icon';\nimport Heading from '../../../elements/heading';\nimport NumberFormat from '../../../../helpers/numberFormat';\n\nvar Accordion = function Accordion(_ref) {\n  _s();\n\n  var t = _ref.t;\n\n  var _useState = useState(null),\n      dataCart = _useState[0],\n      setDataCart = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  var getCart = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"/api/cart/cart\");\n\n            case 3:\n              response = _context.sent;\n\n              if (response.status === 200) {\n                setDataCart(response.data.data); // Make sure you are setting the correct part of the response\n\n                setIsLoading(false);\n              } else {\n                console.log(\"Error in fetching data, status code:\", response.status);\n                setError('Failed to fetch data');\n                setIsLoading(false);\n              }\n\n              _context.next = 12;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error details:', _context.t0.response ? _context.t0.response.data : _context.t0.message);\n              setError(_context.t0.response ? _context.t0.response.data : _context.t0.message);\n              setIsLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getCart() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCart();\n  }, []);\n\n  var handleQuantity = function handleQuantity(type) {\n    alert(type);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, _this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion\",\n    children: dataCart && dataCart.map(function (data, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Accordion, \"u2G+PKD0rcx+6EGZ7TMwr++mr4E=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["D:/luarKampus/Magang/Bestada/laxmi.front.web.user/components/partials/cart/module/accordion.jsx"],"names":["React","useState","useEffect","axios","Image","Link","Trash","MinButton","PlusButton","Heading","NumberFormat","Accordion","t","dataCart","setDataCart","isLoading","setIsLoading","error","setError","getCart","get","response","status","data","console","log","message","handleQuantity","type","alert","map","index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,wBAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAW;AAAA;;AAAA,MAARC,CAAQ,QAARA,CAAQ;;AAAA,kBACOX,QAAQ,CAAC,IAAD,CADf;AAAA,MAClBY,QADkB;AAAA,MACRC,WADQ;;AAAA,mBAESb,QAAQ,CAAC,IAAD,CAFjB;AAAA,MAElBc,SAFkB;AAAA,MAEPC,YAFO;;AAAA,mBAGCf,QAAQ,CAAC,IAAD,CAHT;AAAA,MAGlBgB,KAHkB;AAAA,MAGXC,QAHW;;AAKzB,MAAMC,OAAO;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEehB,KAAK,CAACiB,GAAN,kBAFf;;AAAA;AAEFC,cAAAA,QAFE;;AAGR,kBAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBR,gBAAAA,WAAW,CAACO,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAX,CADyB,CACQ;;AACjCP,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,eAHD,MAGO;AACHQ,gBAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDJ,QAAQ,CAACC,MAA7D;AACAJ,gBAAAA,QAAQ,CAAC,sBAAD,CAAR;AACAF,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AAVO;AAAA;;AAAA;AAAA;AAAA;AAYRQ,cAAAA,OAAO,CAACP,KAAR,CAAc,gBAAd,EAAgC,YAAEI,QAAF,GAAa,YAAEA,QAAF,CAAWE,IAAxB,GAA+B,YAAEG,OAAjE;AACAR,cAAAA,QAAQ,CAAC,YAAEG,QAAF,GAAa,YAAEA,QAAF,CAAWE,IAAxB,GAA+B,YAAEG,OAAlC,CAAR;AACAV,cAAAA,YAAY,CAAC,KAAD,CAAZ;;AAdQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPG,OAAO;AAAA;AAAA;AAAA,KAAb;;AAkBAjB,EAAAA,SAAS,CAAC,YAAM;AACZiB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,IAAI,EAAI;AAC3BC,IAAAA,KAAK,CAACD,IAAD,CAAL;AACH,GAFD;;AAIA,MAAIb,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,MAAIE,KAAJ,EAAW;AACP,wBAAO;AAAA,4BAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKJ,QAAQ,IAAIA,QAAQ,CAACiB,GAAT,CAAa,UAACP,IAAD,EAAOQ,KAAP;AAAA,0BACtB;AAAK,QAAA,SAAS,EAAC;AAAf,SAAqCA,KAArC;AAAA;AAAA;AAAA;AAAA,eADsB;AAAA,KAAb;AADjB;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAhDD;;GAAMpB,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Image from 'next/image';\r\nimport Link from 'next/link';\r\n\r\n// Assuming your other imports are correct and necessary components/icons are available\r\nimport { Trash, MinButton, PlusButton } from '../../../elements/icon';\r\nimport Heading from '../../../elements/heading';\r\nimport NumberFormat from '../../../../helpers/numberFormat';\r\n\r\nconst Accordion = ({ t }) => {\r\n    const [dataCart, setDataCart] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const getCart = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/cart/cart`);\r\n            if (response.status === 200) {\r\n                setDataCart(response.data.data); // Make sure you are setting the correct part of the response\r\n                setIsLoading(false);\r\n            } else {\r\n                console.log(\"Error in fetching data, status code:\", response.status);\r\n                setError('Failed to fetch data');\r\n                setIsLoading(false);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error details:', e.response ? e.response.data : e.message);\r\n            setError(e.response ? e.response.data : e.message);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCart();\r\n    }, []);\r\n\r\n    const handleQuantity = type => {\r\n        alert(type);\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\">\r\n            {dataCart && dataCart.map((data, index) => (\r\n                <div className=\"accordion-item\" key={index}>\r\n                    {/* Your existing JSX for rendering each item */}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Accordion;\r\n"]},"metadata":{},"sourceType":"module"}